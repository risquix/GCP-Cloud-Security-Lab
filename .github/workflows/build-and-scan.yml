name: Build, Scan, and Push Dev Image

on:
  push:
    branches: [main]
    paths:
      - 'app/**'
      - 'helm/**'
      - '.github/workflows/build-and-scan.yml'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

env:
  PROJECT_ID: clgcporg10-173
  REGION: us-central1
  REPOSITORY: wizknowledge

jobs:
  code-security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Semgrep
        run: |
          pip install semgrep
          semgrep --config=auto --sarif --output=semgrep.sarif app/ || true
        continue-on-error: true
      
      - name: Upload Semgrep results
        uses: github/codeql-action/upload-sarif@v3
        if: always() && hashFiles('semgrep.sarif') != ''
        with:
          sarif_file: semgrep.sarif
      
      - name: Run Bandit Security Scan
        run: |
          pip install bandit
          bandit -r app/ -f json -o bandit-report.json || true
      
      - name: Upload Bandit results
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.json

  build-and-push-image:
    needs: code-security-scan
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${REGION}-docker.pkg.dev
      
      - name: Build Dev Image (Vulnerable)
        run: |
          docker build \
            --build-arg RUN_AS_ROOT=true \
            -t ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/wizknowledge-dev:${{ github.sha }} \
            -t ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/wizknowledge-dev:latest \
            -f app/Dockerfile \
            ./app
      
      - name: Scan with Trivy (Allow vulnerabilities for dev)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/wizknowledge-dev:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          exit-code: '0'  # Don't fail for dev
      
      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif
      
      - name: Push Dev Image
        run: |
          docker push ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/wizknowledge-dev:${{ github.sha }}
          docker push ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/wizknowledge-dev:latest
      
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/wizknowledge-dev:${{ github.sha }}
          format: cyclonedx-json
      
      - name: Create Vulnerability Report
        run: |
          echo "## Security Lab Image Report" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** wizknowledge-dev:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ⚠️ Intentional Vulnerabilities (Educational Purpose):" >> $GITHUB_STEP_SUMMARY
          echo "- Running as root user (uid=0)" >> $GITHUB_STEP_SUMMARY
          echo "- Privileged container capabilities" >> $GITHUB_STEP_SUMMARY
          echo "- Outdated base image packages" >> $GITHUB_STEP_SUMMARY
          echo "- No security hardening applied" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note:** This image is designed for security education and should never be used in production."

