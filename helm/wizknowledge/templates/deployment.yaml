apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wizknowledge.fullname" . }}
  labels:
    {{- include "wizknowledge.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "wizknowledge.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "wizknowledge.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            {{- toYaml .Values.env | nindent 12 }}
          command: ["/bin/sh"]
          args: ["-c", "echo 'Starting container...' && whoami && pwd && echo 'Wiz Technical Exercise - WizKnowledge Container' > /tmp/wizexercise.txt && ls -la /tmp/wizexercise.txt && echo 'Starting Python app...' && python app.py"]
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}